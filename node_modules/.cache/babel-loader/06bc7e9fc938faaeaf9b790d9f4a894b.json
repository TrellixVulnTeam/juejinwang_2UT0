{"ast":null,"code":"export default {\n  name: 'Catalogue',\n\n  data() {\n    return {\n      activeName: 'tab0',\n      tabPosition: 'right',\n      scroll: '',\n      list: [{\n        name: \"\"\n      }, {\n        name: \"第二条\"\n      }, {\n        name: \"第三条\"\n      }, {\n        name: \"第四条\"\n      }, {\n        name: \"第五条\"\n      }],\n      navList: [1, 2, 3, 4, 5]\n    };\n  },\n\n  methods: {\n    //这里传入的tab相当于item\n    handleClick(tab, event) {\n      console.log(tab.index);\n      this.jump(tab.index);\n    },\n\n    dataScroll: function () {\n      this.scroll = document.documentElement.scrollTop || document.body.scrollTop;\n    },\n\n    jump(index) {\n      let jump = document.getElementsByClassName('section'); // 获取需要滚动的距离\n\n      let total = jump[index].offsetTop; // Chrome\n\n      document.body.scrollTop = total; // Firefox\n\n      document.documentElement.scrollTop = total; // Safari\n\n      window.pageYOffset = total; // $('html, body').animate({\n      // 'scrollTop': total\n      // }, 400);\n    },\n\n    // 用循环的方式将每个标题离顶部的距离与滚动条当前位置对比来确定哪个标题需要变为高亮\n    loadScroll: function () {\n      var self = this;\n      var sections = document.getElementsByClassName('section');\n\n      for (var i = sections.length - 1; i >= 0; i--) {\n        if (self.scroll >= sections[i].offsetTop - 100) {\n          //我在上面规定了每个el-tab-pane标签的name属性值为tab+该标签的index值\n          self.activeName = 'tab' + i;\n          break;\n        }\n      }\n    }\n  },\n  watch: {\n    //监听scroll变量，只要滚动条位置变化就会执行方法loadScroll\n    scroll: function () {\n      this.loadScroll();\n    }\n  },\n\n  mounted() {\n    // scroll代表滚动条距离页面顶部距离\n    window.addEventListener('scroll', this.dataScroll);\n  }\n\n};","map":{"version":3,"mappings":"AAsBA;EACAA,iBADA;;EAEAC;IACA;MACAC,kBADA;MAEAC,oBAFA;MAGAC,UAHA;MAIAC;QACAL;MADA,GAGA;QACAA;MADA,CAHA,EAKA;QACAA;MADA,CALA,EAQA;QACAA;MADA,CARA,EAWA;QACAA;MADA,CAXA,CAJA;MAmBAM;IAnBA;EAqBA,CAxBA;;EAyBAC;IACA;IACAC;MACAC;MACA;IACA,CALA;;IAMAC;MACA;IACA,CARA;;IASAC;MACA,sDADA,CAEA;;MACA,kCAHA,CAIA;;MACAC,gCALA,CAMA;;MACAA,2CAPA,CAQA;;MACAC,2BATA,CAUA;MACA;MACA;IACA,CAtBA;;IAuBA;IACAC;MACA;MACA;;MACA;QACA;UACA;UACAC;UACA;QACA;MACA;IACA;EAlCA,CAzBA;EA6DAC;IACA;IACAZ;MAEA;IACA;EALA,CA7DA;;EAoEAa;IACA;IACAJ;EACA;;AAvEA","names":["name","data","activeName","tabPosition","scroll","list","navList","methods","handleClick","console","dataScroll","jump","document","window","loadScroll","self","watch","mounted"],"sourceRoot":"src/components","sources":["Catalogue.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n      <div class=\"article_catelog\">\r\n                <div class=\"catelog_title\">\r\n                    目录\r\n                </div>\r\n                 <ul >\r\n                     <li class=\"litem\" >\r\n                        <div class=\"point\">\r\n                            <p :style=\"{top:point+'px'}\">\r\n                               <i></i>\r\n                            </p>\r\n                        </div>\r\n                     <a class=\"a-container\" v-for=\"(item,index) in lists\"  :key=\"index\"  :href=\"'#heading-'+index\" @click=\"f_lis(index)\"  >\r\n                          {{item.name}}\r\n                        </a>\r\n                       </li>\r\n                   </ul>\r\n           </div>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  name:'Catalogue',\r\n  data(){\r\n    return {\r\n      activeName:'tab0',\r\n      tabPosition:'right',\r\n      scroll: '',\r\n      list: [{\r\n        name: \"\"\r\n        \r\n      }, {\r\n        name: \"第二条\"\r\n      }, {\r\n        name: \"第三条\",\r\n        \r\n      }, {\r\n        name: \"第四条\",\r\n        \r\n      }, {\r\n        name: \"第五条\",\r\n        \r\n      }],\r\n      navList: [1, 2, 3, 4, 5]\r\n    }\r\n  },\r\n  methods: {\r\n    //这里传入的tab相当于item\r\n    handleClick(tab,event){\r\n      console.log(tab.index)\r\n      this.jump(tab.index)\r\n    },\r\n    dataScroll: function () {\r\n      this.scroll = document.documentElement.scrollTop || document.body.scrollTop;\r\n    },\r\n    jump(index) {\r\n      let jump = document.getElementsByClassName('section');\r\n      // 获取需要滚动的距离\r\n      let total = jump[index].offsetTop;\r\n      // Chrome\r\n      document.body.scrollTop = total;\r\n      // Firefox\r\n      document.documentElement.scrollTop = total;\r\n      // Safari\r\n      window.pageYOffset = total;\r\n      // $('html, body').animate({\r\n      // 'scrollTop': total\r\n      // }, 400);\r\n    },\r\n    // 用循环的方式将每个标题离顶部的距离与滚动条当前位置对比来确定哪个标题需要变为高亮\r\n    loadScroll: function () {\r\n      var self = this;\r\n      var sections = document.getElementsByClassName('section');\r\n      for (var i = sections.length - 1; i >= 0; i--) {\r\n        if (self.scroll >= sections[i].offsetTop - 100) {\r\n          //我在上面规定了每个el-tab-pane标签的name属性值为tab+该标签的index值\r\n          self.activeName = 'tab'+i\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  },\r\n  watch: {\r\n    //监听scroll变量，只要滚动条位置变化就会执行方法loadScroll\r\n    scroll: function () {\r\n\r\n      this.loadScroll()\r\n    }\r\n  },\r\n  mounted() {\r\n    // scroll代表滚动条距离页面顶部距离\r\n    window.addEventListener('scroll', this.dataScroll);\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n* {\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n.nav1 {\r\n  display: block;\r\n  width: 120px;\r\n  height: 40px;\r\n  text-align: left;\r\n  line-height: 40px;\r\n  color: #fff;\r\n  /* background: #eee; */\r\n  margin: 10px 0;\r\n  cursor: pointer;\r\n  padding-left: 18px;\r\n  &:hover{\r\n    color: #0177ff;\r\n  }\r\n\r\n}\r\n.current {\r\n  color: #0578fc !important;\r\n  cursor: pointer;\r\n}\r\nnav{\r\n  // border-left: 1px solid #eee;\r\n  a{\r\n    border-left: 3px solid #0177ff;\r\n  }\r\n}\r\n\r\n</style>\r\n<style>\r\n.el-tabs__header.is-right{\r\n  margin-right: 100px !important;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}